name: Parent Workflow

on: 
  pull_request:
  #push: 
  #  branches:
  #    - develop
  #    - main
#test
permissions:
  contents: write
  pages: write
  pull-requests: write
  id-token: write

jobs:
  labeler:
    name: Run Labeler Workflow
    uses: ./.github/workflows/labeler.yml
    with:
      artifact_id: "labeler-${{ github.sha }}"

  check_amalgamation:
    name: Run Amalgamation Workflow
    uses: ./.github/workflows/check_amalgamation.yml
    with:
      artifact_id: "check_amalgamation-${{ github.sha }}"
      
  test_trudag_extensions:
    name: Run Test Trudag Extensions Workflow
    uses: ./.github/workflows/test_trudag_extensions.yml
    with:
      artifact_id: "test_trudag_extensions-${{ github.sha }}"


  collect-and-deploy:
    name: "Collect Results & Deploy"
    needs: [labeler, check_amalgamation, test_trudag_extensions]
    runs-on: ubuntu-latest
    if: always() # Run even if some jobs fail
    strategy:
      matrix:
        target: [labeler, check_amalgamation, test_trudag_extensions]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check child workflow results
        run: |
          echo "=== Child Workflow Results ==="
          echo "Labeler workflow: ${{ needs.labeler.result }}"
          echo "Amalgamation workflow: ${{ needs.check_amalgamation.result }}"
          echo "Test Trudag Extensions workflow: ${{ needs.test_trudag_extensions.result }}"
          echo "================================"
          
          if [[ "${{ needs.labeler.result }}" != "success" ]] || \
            [[ "${{ needs.check_amalgamation.result }}" != "success" ]] || \
            [[ "${{ needs.test_trudag_extensions.result }}" != "success" ]] ; then
            echo "❌ One or more child workflows failed"
            exit 1
          fi

          echo "✅ Child workflows completed successfully!"
 
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.target }}-${{ github.sha }}"
          path: artifacts/

      - name: Create deployment package
        run: |
          echo "Creating deployment package..."
          mkdir -p deployment
          echo "Deployment ready - $(date)" > deployment/deployment-info.txt
          
          # Copy all artifacts to deployment folder
          if [[ -d artifacts ]]; then
            cp -r artifacts/* deployment/
          fi

      - name: Upload final deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: "deployment-package-${{ github.sha }}-${{ matrix.target }}"
          path: deployment/

      - name: Deployment simulation
        run: |
          echo "🚀 Simulating deployment..."
          sleep 2
          echo "✅ Deployment completed successfully!"
check_amalgamation-e571c9d4d883472b91f1053ffb1e8d3950f3f168