name: Parent Workflow

on:
  pull_request:
  push:
    branches:
      - develop
      - main

permissions:
  contents: write
  pages: write
  pull-requests: write
  id-token: write

jobs:
  trigger-workflows:
    name: Trigger All Workflows
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workflow:
          - { name: "labeler", file: "labeler.yml" }
          - { name: "check_amalgamation", file: "check_amalgamation.yml" }
          - { name: "test_trudag_extensions", file: "test_trudag_extensions.yml" }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Trigger Child Workflow - ${{ matrix.workflow.name }}
        uses: ./.github/workflows/${{ matrix.workflow.file }}
        with:
          artifact_id: "${{ matrix.workflow.name }}-${{ github.sha }}"

  collect-and-deploy:
    name: Collect Results & Deploy
    needs: trigger-workflows
    runs-on: ubuntu-latest
    if: always() # Run even if some jobs fail

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download All Workflow Artifacts
        run: |
          workflows=("labeler" "check_amalgamation" "test_trudag_extensions")
          for NAME in "${workflows[@]}"; do
            ARTIFACT_ID="${NAME}-${{ github.sha }}"
            echo "Downloading artifact for workflow: $NAME (Artifact ID: $ARTIFACT_ID)"
            mkdir -p artifacts/$NAME
            gh run download --name "$ARTIFACT_ID" --dir "artifacts/$NAME" || echo "⚠️ No artifacts for $NAME"
          done

      - name: Create Deployment Package
        run: |
          echo "Creating deployment package..."
          mkdir -p deployment
          echo "Deployment ready - $(date)" > deployment/deployment-info.txt

          # Copy artifacts into deployment folder
          if [[ -d artifacts ]]; then
            cp -r artifacts/* deployment/
          fi

      - name: Upload Deployment Package
        uses: actions/upload-artifact@v4
        with:
          name: "deployment-package-${{ github.sha }}"
          path: deployment/

      - name: Deployment Simulation
        run: |
          echo "🚀 Simulating deployment..."
          sleep 2
          echo "✅ Deployment completed successfully!"
